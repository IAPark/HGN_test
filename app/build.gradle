apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion 23
        buildToolsVersion "23.0.1"


        defaultConfig {
            applicationId "edu.kent.cs.aisp.hgn_test"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 23
            versionCode 1
            versionName "1.0"
        }
        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file("proguard-rules.pro"))

            }
        }
    }



    android.ndk{
        moduleName = "app-native"
        ldLibs.add('log')
        cppFlags.add("-std=c++11")
        cppFlags.add("-fexceptions")
        cppFlags.add("-I${file("/OpenCV/sdk/native/jni/include")}".toString())
        cppFlags.add("-I${file("/OpenCV/sdk/native/jni/include")}".toString())



//        ldFlags += linkOpt
        ldLibs.add("android")
        ldLibs.add("EGL")
        ldLibs.add("GLESv2")
        ldLibs.add("dl")
        ldLibs.add("log")
        ldLibs.add("z")// , "ibopencv_core"
        stl = "gnustl_shared"//"gnustl_static"//"gnustl_shared"//"stlport_static"
    }

    android.productFlavors {
        create("arm") {
            ndk.with {
                abiFilters.add("armeabi")

                File curDir = file('./')
                curDir = file(curDir.absolutePath)
                String libsDir = curDir.absolutePath+"/src/main/jniLibs/armeabi/" //"-L" +

                ldLibs.add(libsDir + "libopencv_calib3d.a")
                ldLibs.add(libsDir + "libopencv_core.a")
                ldLibs.add(libsDir + "libopencv_features2d.a")
                ldLibs.add(libsDir + "libopencv_flann.a")
                ldLibs.add(libsDir + "libopencv_highgui.a")
                ldLibs.add(libsDir + "libopencv_imgcodecs.a")
                ldLibs.add(libsDir + "libopencv_imgproc.a")
                ldLibs.add(libsDir + "libopencv_java3.so")
                ldLibs.add(libsDir + "libopencv_ml.a")
                ldLibs.add(libsDir + "libopencv_objdetect.a")
                ldLibs.add(libsDir + "libopencv_photo.a")
                ldLibs.add(libsDir + "libopencv_shape.a")
                ldLibs.add(libsDir + "libopencv_stitching.a")
                ldLibs.add(libsDir + "libopencv_superres.a")
                ldLibs.add(libsDir + "libopencv_video.a")
                ldLibs.add(libsDir + "libopencv_videoio.a")
                ldLibs.add(libsDir + "libopencv_videostab.a")


            }
        }
        create("armv7") {
            ndk.with {
                abiFilters.add("armeabi-v7a")

                File curDir = file('./')
                curDir = file(curDir.absolutePath)
                String libsDir = curDir.absolutePath+"/src/main/jniLibs/armeabi-v7a/" //"-L" +

                ldLibs.add(libsDir + "libopencv_calib3d.a")
                ldLibs.add(libsDir + "libopencv_core.a")
                ldLibs.add(libsDir + "libopencv_features2d.a")
                ldLibs.add(libsDir + "libopencv_flann.a")
                ldLibs.add(libsDir + "libopencv_highgui.a")
                ldLibs.add(libsDir + "libopencv_imgcodecs.a")
                ldLibs.add(libsDir + "libopencv_imgproc.a")
                ldLibs.add(libsDir + "libopencv_java3.so")
                ldLibs.add(libsDir + "libopencv_ml.a")
                ldLibs.add(libsDir + "libopencv_objdetect.a")
                ldLibs.add(libsDir + "libopencv_photo.a")
                ldLibs.add(libsDir + "libopencv_shape.a")
                ldLibs.add(libsDir + "libopencv_stitching.a")
                ldLibs.add(libsDir + "libopencv_superres.a")
                ldLibs.add(libsDir + "libopencv_video.a")
                ldLibs.add(libsDir + "libopencv_videoio.a")
                ldLibs.add(libsDir + "libopencv_videostab.a")

            }
        }
        create("x86") {
            ndk.with {
                abiFilters.add("x86")
            }
        }
        create("mips") {
            ndk.with {
                abiFilters.add("mips")
            }
        }
        create("fat") {

        }
    }



}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile project(':openCVLibrary')

}
